(()=>{var n={426:(n,r,e)=>{"use strict";e.d(r,{Z:()=>i});var t=e(15),o=e.n(t),A=e(645),a=e.n(A)()(o());a.push([n.id,'body {\r\n  background-color: #292929;\r\n  color: white;\r\n  width: 100vw;\r\n  height: 100vh;\r\n}\r\n\r\nnav {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  gap: 25%;\r\n}\r\n\r\nheader {\r\n  height: 8.5%;\r\n  display: flex;\r\n}\r\n\r\n.logo {\r\n  margin-left: 5%;\r\n  border-radius: 50%;\r\n  border: solid 1px white;\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.nav-element {\r\n  width: 10%;\r\n}\r\n\r\nfooter {\r\n  background-color: #292929;\r\n  height: 10%;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  border-top: solid 2px white;\r\n}\r\n\r\nmain {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 80%;\r\n  background-color: #616161;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.card-container {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 2.5%;\r\n  display: grid;\r\n  width: 90%;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  column-gap: 5%;\r\n  row-gap: 5%;\r\n  margin-bottom: 2.5%;\r\n}\r\n\r\n.card-image {\r\n  width: 100%;\r\n  height: 50%;\r\n}\r\n\r\n.card {\r\n  background-color: #292929;\r\n  width: 15vw;\r\n  height: 50vh;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\nh5 {\r\n  height: 5%;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\n.like-genre-container {\r\n  width: 100%;\r\n  height: 20%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n\r\n.button {\r\n  background-color: #ee2935;\r\n  border: none;\r\n  color: white;\r\n  width: 100%;\r\n  height: 75%;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin-top: 5%;\r\n}\r\n\r\n.card-button {\r\n  height: 25%;\r\n  width: 100%;\r\n  margin-top: 0%;\r\n  margin-bottom: 0%;\r\n}\r\n\r\n.fa-star {\r\n  color: yellow;\r\n  margin-left: auto;\r\n  margin-top: 10%;\r\n  margin-bottom: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.movie_cover {\r\n  width: 80vw;\r\n}\r\n\r\n.movie_name {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.data {\r\n  width: 42vw;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.genere::after {\r\n  content: "\\a\\a";\r\n  white-space: pre;\r\n}\r\n\r\n.comments_number {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.comments_container {\r\n  width: 50vw;\r\n  margin-left: 25vw;\r\n  margin-top: 3vw;\r\n  display: none;\r\n}\r\n\r\n.comment {\r\n  display: flex;\r\n}\r\n\r\n.comment_date,\r\n.commentator_name {\r\n  margin-right: 2%;\r\n}\r\n\r\n.add_comment {\r\n  width: 30vw;\r\n  margin-top: 3vw;\r\n  margin-bottom: 2vh;\r\n  margin-bottom: 10%;\r\n}\r\n\r\n.your_name {\r\n  border: solid 1px black;\r\n}\r\n\r\ntextarea {\r\n  margin-top: 3%;\r\n  width: 80%;\r\n  border: solid 1px black;\r\n}\r\n\r\n.movie_cover_container {\r\n  display: flex;\r\n}\r\n\r\n.close {\r\n  width: 7vw;\r\n  margin-left: 1vw;\r\n}\r\n\r\ntextarea::after {\r\n  content: "\\a";\r\n  white-space: pre;\r\n}\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,WAAW;EACX,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,uBAAuB;EACvB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,OAAO;EACP,SAAS;EACT,WAAW;EACX,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,WAAW;EACX,WAAW;EACX,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;EAChB,aAAa;EACb,UAAU;EACV,kCAAkC;EAClC,2BAA2B;EAC3B,cAAc;EACd,WAAW;EACX,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,WAAW;AACb;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,qBAAqB;EACrB,qBAAqB;EACrB,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,eAAe;EACf,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,eAAe;EACf,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,cAAc;EACd,UAAU;EACV,uBAAuB;AACzB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB",sourcesContent:['body {\r\n  background-color: #292929;\r\n  color: white;\r\n  width: 100vw;\r\n  height: 100vh;\r\n}\r\n\r\nnav {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  gap: 25%;\r\n}\r\n\r\nheader {\r\n  height: 8.5%;\r\n  display: flex;\r\n}\r\n\r\n.logo {\r\n  margin-left: 5%;\r\n  border-radius: 50%;\r\n  border: solid 1px white;\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.nav-element {\r\n  width: 10%;\r\n}\r\n\r\nfooter {\r\n  background-color: #292929;\r\n  height: 10%;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  border-top: solid 2px white;\r\n}\r\n\r\nmain {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 80%;\r\n  background-color: #616161;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.card-container {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 2.5%;\r\n  display: grid;\r\n  width: 90%;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  column-gap: 5%;\r\n  row-gap: 5%;\r\n  margin-bottom: 2.5%;\r\n}\r\n\r\n.card-image {\r\n  width: 100%;\r\n  height: 50%;\r\n}\r\n\r\n.card {\r\n  background-color: #292929;\r\n  width: 15vw;\r\n  height: 50vh;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\nh5 {\r\n  height: 5%;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\n.like-genre-container {\r\n  width: 100%;\r\n  height: 20%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n\r\n.button {\r\n  background-color: #ee2935;\r\n  border: none;\r\n  color: white;\r\n  width: 100%;\r\n  height: 75%;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin-top: 5%;\r\n}\r\n\r\n.card-button {\r\n  height: 25%;\r\n  width: 100%;\r\n  margin-top: 0%;\r\n  margin-bottom: 0%;\r\n}\r\n\r\n.fa-star {\r\n  color: yellow;\r\n  margin-left: auto;\r\n  margin-top: 10%;\r\n  margin-bottom: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.movie_cover {\r\n  width: 80vw;\r\n}\r\n\r\n.movie_name {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.data {\r\n  width: 42vw;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.genere::after {\r\n  content: "\\a\\a";\r\n  white-space: pre;\r\n}\r\n\r\n.comments_number {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.comments_container {\r\n  width: 50vw;\r\n  margin-left: 25vw;\r\n  margin-top: 3vw;\r\n  display: none;\r\n}\r\n\r\n.comment {\r\n  display: flex;\r\n}\r\n\r\n.comment_date,\r\n.commentator_name {\r\n  margin-right: 2%;\r\n}\r\n\r\n.add_comment {\r\n  width: 30vw;\r\n  margin-top: 3vw;\r\n  margin-bottom: 2vh;\r\n  margin-bottom: 10%;\r\n}\r\n\r\n.your_name {\r\n  border: solid 1px black;\r\n}\r\n\r\ntextarea {\r\n  margin-top: 3%;\r\n  width: 80%;\r\n  border: solid 1px black;\r\n}\r\n\r\n.movie_cover_container {\r\n  display: flex;\r\n}\r\n\r\n.close {\r\n  width: 7vw;\r\n  margin-left: 1vw;\r\n}\r\n\r\ntextarea::after {\r\n  content: "\\a";\r\n  white-space: pre;\r\n}\r\n'],sourceRoot:""}]);const i=a},645:n=>{"use strict";n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e=n(r);return r[2]?"@media ".concat(r[2]," {").concat(e,"}"):e})).join("")},r.i=function(n,e,t){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(t)for(var A=0;A<this.length;A++){var a=this[A][0];null!=a&&(o[a]=!0)}for(var i=0;i<n.length;i++){var c=[].concat(n[i]);t&&o[c[0]]||(e&&(c[2]?c[2]="".concat(e," and ").concat(c[2]):c[2]=e),r.push(c))}},r}},15:n=>{"use strict";function r(n,r){(null==r||r>n.length)&&(r=n.length);for(var e=0,t=new Array(r);e<r;e++)t[e]=n[e];return t}n.exports=function(n){var e,t,o=(t=4,function(n){if(Array.isArray(n))return n}(e=n)||function(n,r){var e=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=e){var t,o,A=[],a=!0,i=!1;try{for(e=e.call(n);!(a=(t=e.next()).done)&&(A.push(t.value),!r||A.length!==r);a=!0);}catch(n){i=!0,o=n}finally{try{a||null==e.return||e.return()}finally{if(i)throw o}}return A}}(e,t)||function(n,e){if(n){if("string"==typeof n)return r(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?r(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),A=o[1],a=o[3];if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),l="/*# ".concat(c," */"),d=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[A].concat(d).concat([l]).join("\n")}return[A].join("\n")}},300:(n,r)=>{"use strict";var e=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==e)return e;throw new Error("unable to locate global object")}();n.exports=r=e.fetch,e.fetch&&(r.default=e.fetch.bind(e)),r.Headers=e.Headers,r.Request=e.Request,r.Response=e.Response},379:(n,r,e)=>{"use strict";var t,o=function(){var n={};return function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}n[r]=e}return n[r]}}(),A=[];function a(n){for(var r=-1,e=0;e<A.length;e++)if(A[e].identifier===n){r=e;break}return r}function i(n,r){for(var e={},t=[],o=0;o<n.length;o++){var i=n[o],c=r.base?i[0]+r.base:i[0],l=e[c]||0,d="".concat(c," ").concat(l);e[c]=l+1;var s=a(d),u={css:i[1],media:i[2],sourceMap:i[3]};-1!==s?(A[s].references++,A[s].updater(u)):A.push({identifier:d,updater:h(u,r),references:1}),t.push(d)}return t}function c(n){var r=document.createElement("style"),t=n.attributes||{};if(void 0===t.nonce){var A=e.nc;A&&(t.nonce=A)}if(Object.keys(t).forEach((function(n){r.setAttribute(n,t[n])})),"function"==typeof n.insert)n.insert(r);else{var a=o(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(r)}return r}var l,d=(l=[],function(n,r){return l[n]=r,l.filter(Boolean).join("\n")});function s(n,r,e,t){var o=e?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(n.styleSheet)n.styleSheet.cssText=d(r,o);else{var A=document.createTextNode(o),a=n.childNodes;a[r]&&n.removeChild(a[r]),a.length?n.insertBefore(A,a[r]):n.appendChild(A)}}function u(n,r,e){var t=e.css,o=e.media,A=e.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),A&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var m=null,f=0;function h(n,r){var e,t,o;if(r.singleton){var A=f++;e=m||(m=c(r)),t=s.bind(null,e,A,!1),o=s.bind(null,e,A,!0)}else e=c(r),t=u.bind(null,e,r),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)};return t(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap)return;t(n=r)}else o()}}n.exports=function(n,r){(r=r||{}).singleton||"boolean"==typeof r.singleton||(r.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var e=i(n=n||[],r);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var t=0;t<e.length;t++){var o=a(e[t]);A[o].references--}for(var c=i(n,r),l=0;l<e.length;l++){var d=a(e[l]);0===A[d].references&&(A[d].updater(),A.splice(d,1))}e=c}}}},160:()=>{spawnCards=(n,r)=>{n.forEach((n=>{((n,r)=>{const e=document.createElement("div");e.classList.add("card");const t=document.createElement("img");t.classList.add("card-image"),t.src=n.show.image.medium;const o=document.createElement("h5");o.textContent=n.show.name;const A=document.createElement("div");A.classList.add("like-genre-container");const a=document.createElement("h6");a.textContent="Likes: 9";const i=document.createElement("i");i.classList.add("fa"),i.classList.add("fa-star");const c=document.createElement("input");c.value="Comments",c.classList.add("button"),c.classList.add("card-button"),A.appendChild(a),A.appendChild(i),e.appendChild(t),e.appendChild(o),e.appendChild(A),e.appendChild(c),r.appendChild(e)})(n,r)}))}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var A=r[t]={id:t,exports:{}};return n[t](A,A.exports,e),A.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{"use strict";var n=e(379),r=e.n(n),t=e(426);r()(t.Z,{insert:"head",singleton:!1}),t.Z.locals;var o=e(160);const A=document.querySelector(".card-container"),a=e(300);(async function(){const n=await a("https://api.tvmaze.com/search/shows?q=comedy#");return await n.json()})().then((n=>{console.log(n),n.splice(8,1),(0,o.spawnCards)(n,A)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,