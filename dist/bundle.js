(()=>{"use strict";var n={426:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(15),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([n.id,'body {\r\n  background-color: #292929;\r\n  color: white;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow-x: hidden;\r\n}\r\n\r\nnav {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  gap: 25%;\r\n}\r\n\r\nheader {\r\n  height: 8.5%;\r\n  display: flex;\r\n}\r\n\r\n.logo {\r\n  margin-left: 5%;\r\n  border-radius: 50%;\r\n  border: solid 1px white;\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.nav-element {\r\n  width: 10%;\r\n}\r\n\r\nfooter {\r\n  display: flex;\r\n  background-color: #292929;\r\n  height: 11%;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  border-top: solid 2px white;\r\n  align-items: center;\r\n}\r\n\r\nmain {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 80%;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.card-container {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 2.5%;\r\n  display: grid;\r\n  width: 90%;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  column-gap: 5%;\r\n  row-gap: 5%;\r\n  margin-bottom: 2.5%;\r\n}\r\n\r\n.card-image {\r\n  width: 100%;\r\n  height: 50%;\r\n}\r\n\r\n.card {\r\n  background-color: #292929;\r\n  width: 15vw;\r\n  height: 50vh;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\nh3 {\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  text-align: center;\r\n}\r\n\r\nh5 {\r\n  height: 5%;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\nh6 {\r\n  padding-top: 5%;\r\n}\r\n\r\n.like-genre-container {\r\n  width: 100%;\r\n  height: 20%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n\r\n.button {\r\n  background-color: #ee2935;\r\n  border: none;\r\n  color: white;\r\n  width: 100%;\r\n  height: 75%;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin-top: 5%;\r\n}\r\n\r\n.card-button {\r\n  height: 25%;\r\n  width: 100%;\r\n  margin-top: 0%;\r\n  margin-bottom: 0%;\r\n}\r\n\r\n.fa-star {\r\n  color: yellow;\r\n  margin-left: auto;\r\n  margin-top: 10%;\r\n  margin-bottom: auto;\r\n  margin-right: auto;\r\n  cursor: pointer;\r\n}\r\n\r\n.movie_cover {\r\n  width: 80vw;\r\n}\r\n\r\n.movie_name {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.data {\r\n  width: 42vw;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.genere::after {\r\n  content: "\\a\\a";\r\n  white-space: pre;\r\n}\r\n\r\n.comments_number {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.comments_container {\r\n  width: 50vw;\r\n  margin-left: 25vw;\r\n  margin-top: 3vw;\r\n  display: none;\r\n}\r\n\r\n.comment {\r\n  display: flex;\r\n}\r\n\r\n.comment_date,\r\n.commentator_name {\r\n  margin-right: 2%;\r\n}\r\n\r\n.add_comment {\r\n  width: 30vw;\r\n  margin-top: 3vw;\r\n  margin-bottom: 2vh;\r\n  margin-bottom: 10%;\r\n}\r\n\r\n.your_name {\r\n  border: solid 1px black;\r\n}\r\n\r\ntextarea {\r\n  margin-top: 3%;\r\n  width: 80%;\r\n  border: solid 1px black;\r\n}\r\n\r\n.movie_cover_container {\r\n  display: flex;\r\n}\r\n\r\n.close {\r\n  width: 7vw;\r\n  margin-left: 1vw;\r\n}\r\n\r\ntextarea::after {\r\n  content: "\\a";\r\n  white-space: pre;\r\n}\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,WAAW;EACX,QAAQ;AACV;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,uBAAuB;EACvB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,yBAAyB;EACzB,WAAW;EACX,OAAO;EACP,SAAS;EACT,WAAW;EACX,2BAA2B;EAC3B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,WAAW;EACX,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;EAChB,aAAa;EACb,UAAU;EACV,kCAAkC;EAClC,2BAA2B;EAC3B,cAAc;EACd,WAAW;EACX,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,WAAW;AACb;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,qBAAqB;EACrB,qBAAqB;EACrB,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,mBAAmB;EACnB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,eAAe;EACf,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,eAAe;EACf,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,cAAc;EACd,UAAU;EACV,uBAAuB;AACzB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB",sourcesContent:['body {\r\n  background-color: #292929;\r\n  color: white;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow-x: hidden;\r\n}\r\n\r\nnav {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  gap: 25%;\r\n}\r\n\r\nheader {\r\n  height: 8.5%;\r\n  display: flex;\r\n}\r\n\r\n.logo {\r\n  margin-left: 5%;\r\n  border-radius: 50%;\r\n  border: solid 1px white;\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.nav-element {\r\n  width: 10%;\r\n}\r\n\r\nfooter {\r\n  display: flex;\r\n  background-color: #292929;\r\n  height: 11%;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  border-top: solid 2px white;\r\n  align-items: center;\r\n}\r\n\r\nmain {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 80%;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.card-container {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 2.5%;\r\n  display: grid;\r\n  width: 90%;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  column-gap: 5%;\r\n  row-gap: 5%;\r\n  margin-bottom: 2.5%;\r\n}\r\n\r\n.card-image {\r\n  width: 100%;\r\n  height: 50%;\r\n}\r\n\r\n.card {\r\n  background-color: #292929;\r\n  width: 15vw;\r\n  height: 50vh;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\nh3 {\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  text-align: center;\r\n}\r\n\r\nh5 {\r\n  height: 5%;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\nh6 {\r\n  padding-top: 5%;\r\n}\r\n\r\n.like-genre-container {\r\n  width: 100%;\r\n  height: 20%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n\r\n.button {\r\n  background-color: #ee2935;\r\n  border: none;\r\n  color: white;\r\n  width: 100%;\r\n  height: 75%;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin-top: 5%;\r\n}\r\n\r\n.card-button {\r\n  height: 25%;\r\n  width: 100%;\r\n  margin-top: 0%;\r\n  margin-bottom: 0%;\r\n}\r\n\r\n.fa-star {\r\n  color: yellow;\r\n  margin-left: auto;\r\n  margin-top: 10%;\r\n  margin-bottom: auto;\r\n  margin-right: auto;\r\n  cursor: pointer;\r\n}\r\n\r\n.movie_cover {\r\n  width: 80vw;\r\n}\r\n\r\n.movie_name {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.data {\r\n  width: 42vw;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.genere::after {\r\n  content: "\\a\\a";\r\n  white-space: pre;\r\n}\r\n\r\n.comments_number {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.comments_container {\r\n  width: 50vw;\r\n  margin-left: 25vw;\r\n  margin-top: 3vw;\r\n  display: none;\r\n}\r\n\r\n.comment {\r\n  display: flex;\r\n}\r\n\r\n.comment_date,\r\n.commentator_name {\r\n  margin-right: 2%;\r\n}\r\n\r\n.add_comment {\r\n  width: 30vw;\r\n  margin-top: 3vw;\r\n  margin-bottom: 2vh;\r\n  margin-bottom: 10%;\r\n}\r\n\r\n.your_name {\r\n  border: solid 1px black;\r\n}\r\n\r\ntextarea {\r\n  margin-top: 3%;\r\n  width: 80%;\r\n  border: solid 1px black;\r\n}\r\n\r\n.movie_cover_container {\r\n  display: flex;\r\n}\r\n\r\n.close {\r\n  width: 7vw;\r\n  margin-left: 1vw;\r\n}\r\n\r\ntextarea::after {\r\n  content: "\\a";\r\n  white-space: pre;\r\n}\r\n'],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e=n(r);return r[2]?"@media ".concat(r[2]," {").concat(e,"}"):e})).join("")},r.i=function(n,e,t){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(t)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);t&&o[c[0]]||(e&&(c[2]?c[2]="".concat(e," and ").concat(c[2]):c[2]=e),r.push(c))}},r}},15:n=>{function r(n,r){(null==r||r>n.length)&&(r=n.length);for(var e=0,t=new Array(r);e<r;e++)t[e]=n[e];return t}n.exports=function(n){var e,t,o=(t=4,function(n){if(Array.isArray(n))return n}(e=n)||function(n,r){var e=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=e){var t,o,a=[],i=!0,A=!1;try{for(e=e.call(n);!(i=(t=e.next()).done)&&(a.push(t.value),!r||a.length!==r);i=!0);}catch(n){A=!0,o=n}finally{try{i||null==e.return||e.return()}finally{if(A)throw o}}return a}}(e,t)||function(n,e){if(n){if("string"==typeof n)return r(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?r(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],i=o[3];if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),l="/*# ".concat(c," */"),d=i.sources.map((function(n){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(n," */")}));return[a].concat(d).concat([l]).join("\n")}return[a].join("\n")}},300:(n,r)=>{var e=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==e)return e;throw new Error("unable to locate global object")}();n.exports=r=e.fetch,e.fetch&&(r.default=e.fetch.bind(e)),r.Headers=e.Headers,r.Request=e.Request,r.Response=e.Response},379:(n,r,e)=>{var t,o=function(){var n={};return function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}n[r]=e}return n[r]}}(),a=[];function i(n){for(var r=-1,e=0;e<a.length;e++)if(a[e].identifier===n){r=e;break}return r}function A(n,r){for(var e={},t=[],o=0;o<n.length;o++){var A=n[o],c=r.base?A[0]+r.base:A[0],l=e[c]||0,d="".concat(c," ").concat(l);e[c]=l+1;var s=i(d),u={css:A[1],media:A[2],sourceMap:A[3]};-1!==s?(a[s].references++,a[s].updater(u)):a.push({identifier:d,updater:h(u,r),references:1}),t.push(d)}return t}function c(n){var r=document.createElement("style"),t=n.attributes||{};if(void 0===t.nonce){var a=e.nc;a&&(t.nonce=a)}if(Object.keys(t).forEach((function(n){r.setAttribute(n,t[n])})),"function"==typeof n.insert)n.insert(r);else{var i=o(n.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(r)}return r}var l,d=(l=[],function(n,r){return l[n]=r,l.filter(Boolean).join("\n")});function s(n,r,e,t){var o=e?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(n.styleSheet)n.styleSheet.cssText=d(r,o);else{var a=document.createTextNode(o),i=n.childNodes;i[r]&&n.removeChild(i[r]),i.length?n.insertBefore(a,i[r]):n.appendChild(a)}}function u(n,r,e){var t=e.css,o=e.media,a=e.sourceMap;if(o?n.setAttribute("media",o):n.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}var m=null,p=0;function h(n,r){var e,t,o;if(r.singleton){var a=p++;e=m||(m=c(r)),t=s.bind(null,e,a,!1),o=s.bind(null,e,a,!0)}else e=c(r),t=u.bind(null,e,r),o=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)};return t(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap)return;t(n=r)}else o()}}n.exports=function(n,r){(r=r||{}).singleton||"boolean"==typeof r.singleton||(r.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var e=A(n=n||[],r);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var t=0;t<e.length;t++){var o=i(e[t]);a[o].references--}for(var c=A(n,r),l=0;l<e.length;l++){var d=i(e[l]);0===a[d].references&&(a[d].updater(),a.splice(d,1))}e=c}}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={id:t,exports:{}};return n[t](a,a.exports,e),a.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n=e(379),r=e.n(n),t=e(426);r()(t.Z,{insert:"head",singleton:!1}),t.Z.locals;const o=document.querySelector(".card-container"),a=document.querySelector(".comedy"),i=e(300);(async function(){const n=await i("https://api.tvmaze.com/search/shows?q=comedy#");return await n.json()})().then((n=>{console.log(n),n.splice(8,1);var r,e;e=((n,r)=>{let e=0;return n.forEach((n=>{e+=1,((n,r)=>{const e=document.createElement("div");e.classList.add("card");const t=document.createElement("img");t.classList.add("card-image"),t.src=n.show.image.medium;const o=document.createElement("h5");o.textContent=n.show.name;const a=document.createElement("div");a.classList.add("like-genre-container");const i=document.createElement("h6");i.textContent="",i.id=`like-${n.show.name}`;const A=document.createElement("i");A.classList.add("fa"),A.classList.add("fa-star"),A.addEventListener("click",(()=>{let r=i.textContent.split(" ");r=parseInt(r[1],10),r+=1,i.textContent=`Likes: ${r}`,(async n=>{fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/Q6FJ5Iv0xZsu9v3INtJx/likes",{method:"POST",body:JSON.stringify({item_id:n}),headers:{"Content-type":"application/json; charset=UTF-8"}}).then((n=>n.json()))})(n.show.name)}));const c=document.createElement("button");c.textContent="Comments",c.classList.add("button"),c.classList.add("card-button"),c.type="button",c.readOnly=!0,c.addEventListener("click",(()=>{var r;document.querySelector(".card-container").style.display="none",document.querySelector(".mname").textContent=o.textContent,document.querySelector(".movie_cover").src=t.src,document.querySelector(".summary_text").innerHTML=n.show.summary,document.querySelector(".comments_container").style.display="block",document.querySelector(".card").style.display="block",document.querySelector("main").style.display="none",r=o.textContent,async function(){const n="https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/Q6FJ5Iv0xZsu9v3INtJx/comments?item_id="+(r=r.replace(/\s/g,"%20")),e=await fetch(n);return await e.json()}().then((n=>{const r=document.querySelector(".comments_content");for(;r.firstChild;)r.removeChild(r.firstChild);document.querySelector(".comments_number").textContent=`comments (${n.length})`;for(let e=0;e<n.length;e+=1){const t=document.createElement("div");t.style.display="flex";const o=n[e].username,a=n[e].creation_date,i=n[e].comment,A=document.createElement("div");A.style.marginRight="60px";const c=document.createElement("div");c.style.marginRight="60px";const l=document.createElement("div");A.textContent=o,c.textContent=a,l.textContent=i,t.appendChild(A),t.appendChild(c),t.appendChild(l),r.appendChild(t)}}))})),a.appendChild(i),a.appendChild(A),e.appendChild(t),e.appendChild(o),e.appendChild(a),e.appendChild(c),r.appendChild(e)})(n,r)})),e})(n,o),(r=a).value=`${r.value} (${e})`,(async()=>{(await(async()=>fetch("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/Q6FJ5Iv0xZsu9v3INtJx/likes",{method:"GET",headers:{"Content-type":"application/json; charset=UTF-8"}}).then((n=>n.json())).then((n=>n)))()).forEach((n=>{document.getElementById(`like-${n.item_id}`).textContent=`Likes: ${n.likes}`}))})()})),document.querySelector(".close").addEventListener("click",(()=>{document.querySelector(".card-container").style.display="flex",document.querySelector(".comments_container").style.display="none",document.querySelector(".card-container").style.display="grid",document.querySelector("main").style.display="flex"})),document.querySelector(".close").addEventListener("click",(()=>{document.querySelector(".card-container").style.display="flex",document.querySelector(".comments_container").style.display="none",document.querySelector(".card-container").style.display="grid",document.querySelector("main").style.display="flex"})),document.querySelector(".submit_button").addEventListener("click",(()=>{const n=document.querySelector(".mname").textContent,r=document.querySelector(".your_name").value,e=document.querySelector("textarea").value;i("https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/Q6FJ5Iv0xZsu9v3INtJx/comments",{method:"POST",body:JSON.stringify({item_id:n,username:r,comment:e}),headers:{"Content-type":"application/json; charset=UTF-8"}}).then((n=>n.json())).then((n=>console.log(n))),document.querySelector(".your_name").value="",document.querySelector("textarea").value="",event.preventDefault()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,