(()=>{"use strict";var r={426:(r,n,e)=>{e.d(n,{Z:()=>i});var t=e(15),A=e.n(t),o=e(645),a=e.n(o)()(A());a.push([r.id,'body {\r\n  background-color: #292929;\r\n  color: white;\r\n  width: 100vw;\r\n  height: 100vh;\r\n}\r\n\r\nnav {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  gap: 25%;\r\n}\r\n\r\nheader {\r\n  height: 10%;\r\n  display: flex;\r\n}\r\n\r\n.logo {\r\n  margin-left: 5%;\r\n  border-radius: 50%;\r\n  border: solid 1px white;\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.nav-element {\r\n  width: 10%;\r\n}\r\n\r\nfooter {\r\n  background-color: #292929;\r\n  height: 10%;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  border-top: solid 2px white;\r\n}\r\n\r\nmain {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 80%;\r\n  background-color: #616161;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.card-container {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 2.5%;\r\n  display: grid;\r\n  width: 90%;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  column-gap: 5%;\r\n  row-gap: 5%;\r\n  margin-bottom: 2.5%;\r\n}\r\n\r\n.card-image {\r\n  width: 100%;\r\n  height: 50%;\r\n}\r\n\r\n.card {\r\n  background-color: #292929;\r\n  width: 15vw;\r\n  height: 50vh;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\nh5 {\r\n  height: 5%;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\n.like-genre-container {\r\n  width: 100%;\r\n  height: 20%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n\r\n.button {\r\n  background-color: #ee2935;\r\n  border: none;\r\n  color: white;\r\n  width: 100%;\r\n  height: 75%;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin-top: 5%;\r\n}\r\n\r\n.card-button {\r\n  height: 25%;\r\n  width: 100%;\r\n  margin-top: 0%;\r\n  margin-bottom: 0%;\r\n}\r\n\r\n.fa-star {\r\n  color: yellow;\r\n  margin-left: auto;\r\n  margin-top: 10%;\r\n  margin-bottom: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.movie_cover {\r\n  width: 80vw;\r\n}\r\n\r\n.movie_name {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.data {\r\n  width: 42vw;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.genere::after {\r\n  content: "\\a\\a";\r\n  white-space: pre;\r\n}\r\n\r\n.comments_number {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.comments_container {\r\n  width: 50vw;\r\n  margin-left: 25vw;\r\n  margin-top: 3vw;\r\n  display: none;\r\n}\r\n\r\n.comment {\r\n  display: flex;\r\n}\r\n\r\n.comment_date,\r\n.commentator_name {\r\n  margin-right: 2%;\r\n}\r\n\r\n.add_comment {\r\n  width: 30vw;\r\n  margin-top: 3vw;\r\n  margin-bottom: 2vh;\r\n  margin-bottom: 10%;\r\n}\r\n\r\n.your_name {\r\n  border: solid 1px black;\r\n}\r\n\r\ntextarea {\r\n  margin-top: 3%;\r\n  width: 80%;\r\n  border: solid 1px black;\r\n}\r\n\r\n.movie_cover_container {\r\n  display: flex;\r\n}\r\n\r\n.close {\r\n  width: 7vw;\r\n  margin-left: 1vw;\r\n}\r\n\r\ntextarea::after {\r\n  content: "\\a";\r\n  white-space: pre;\r\n}\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,WAAW;EACX,QAAQ;AACV;;AAEA;EACE,WAAW;EACX,aAAa;AACf;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,uBAAuB;EACvB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,OAAO;EACP,SAAS;EACT,WAAW;EACX,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,WAAW;EACX,WAAW;EACX,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;EAChB,aAAa;EACb,UAAU;EACV,kCAAkC;EAClC,2BAA2B;EAC3B,cAAc;EACd,WAAW;EACX,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,WAAW;AACb;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,UAAU;EACV,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,qBAAqB;EACrB,qBAAqB;EACrB,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,eAAe;EACf,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,eAAe;EACf,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,eAAe;EACf,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,cAAc;EACd,UAAU;EACV,uBAAuB;AACzB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB",sourcesContent:['body {\r\n  background-color: #292929;\r\n  color: white;\r\n  width: 100vw;\r\n  height: 100vh;\r\n}\r\n\r\nnav {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  gap: 25%;\r\n}\r\n\r\nheader {\r\n  height: 10%;\r\n  display: flex;\r\n}\r\n\r\n.logo {\r\n  margin-left: 5%;\r\n  border-radius: 50%;\r\n  border: solid 1px white;\r\n  width: 50px;\r\n  height: 50px;\r\n}\r\n\r\n.nav-element {\r\n  width: 10%;\r\n}\r\n\r\nfooter {\r\n  background-color: #292929;\r\n  height: 10%;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  border-top: solid 2px white;\r\n}\r\n\r\nmain {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 80%;\r\n  background-color: #616161;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.card-container {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 2.5%;\r\n  display: grid;\r\n  width: 90%;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  column-gap: 5%;\r\n  row-gap: 5%;\r\n  margin-bottom: 2.5%;\r\n}\r\n\r\n.card-image {\r\n  width: 100%;\r\n  height: 50%;\r\n}\r\n\r\n.card {\r\n  background-color: #292929;\r\n  width: 15vw;\r\n  height: 50vh;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\nh5 {\r\n  height: 5%;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\n.like-genre-container {\r\n  width: 100%;\r\n  height: 20%;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n}\r\n\r\n.button {\r\n  background-color: #ee2935;\r\n  border: none;\r\n  color: white;\r\n  width: 100%;\r\n  height: 75%;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  font-size: 16px;\r\n  margin-top: 5%;\r\n}\r\n\r\n.card-button {\r\n  height: 25%;\r\n  width: 100%;\r\n  margin-top: 0%;\r\n  margin-bottom: 0%;\r\n}\r\n\r\n.fa-star {\r\n  color: yellow;\r\n  margin-left: auto;\r\n  margin-top: 10%;\r\n  margin-bottom: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n.movie_cover {\r\n  width: 80vw;\r\n}\r\n\r\n.movie_name {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.data {\r\n  width: 42vw;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.genere::after {\r\n  content: "\\a\\a";\r\n  white-space: pre;\r\n}\r\n\r\n.comments_number {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.comments_container {\r\n  width: 50vw;\r\n  margin-left: 25vw;\r\n  margin-top: 3vw;\r\n  display: none;\r\n}\r\n\r\n.comment {\r\n  display: flex;\r\n}\r\n\r\n.comment_date,\r\n.commentator_name {\r\n  margin-right: 2%;\r\n}\r\n\r\n.add_comment {\r\n  width: 30vw;\r\n  margin-top: 3vw;\r\n  margin-bottom: 2vh;\r\n  margin-bottom: 10%;\r\n}\r\n\r\n.your_name {\r\n  border: solid 1px black;\r\n}\r\n\r\ntextarea {\r\n  margin-top: 3%;\r\n  width: 80%;\r\n  border: solid 1px black;\r\n}\r\n\r\n.movie_cover_container {\r\n  display: flex;\r\n}\r\n\r\n.close {\r\n  width: 7vw;\r\n  margin-left: 1vw;\r\n}\r\n\r\ntextarea::after {\r\n  content: "\\a";\r\n  white-space: pre;\r\n}\r\n'],sourceRoot:""}]);const i=a},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e=r(n);return n[2]?"@media ".concat(n[2]," {").concat(e,"}"):e})).join("")},n.i=function(r,e,t){"string"==typeof r&&(r=[[null,r,""]]);var A={};if(t)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(A[a]=!0)}for(var i=0;i<r.length;i++){var c=[].concat(r[i]);t&&A[c[0]]||(e&&(c[2]?c[2]="".concat(e," and ").concat(c[2]):c[2]=e),n.push(c))}},n}},15:r=>{function n(r,n){(null==n||n>r.length)&&(n=r.length);for(var e=0,t=new Array(n);e<n;e++)t[e]=r[e];return t}r.exports=function(r){var e,t,A=(t=4,function(r){if(Array.isArray(r))return r}(e=r)||function(r,n){var e=r&&("undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"]);if(null!=e){var t,A,o=[],a=!0,i=!1;try{for(e=e.call(r);!(a=(t=e.next()).done)&&(o.push(t.value),!n||o.length!==n);a=!0);}catch(r){i=!0,A=r}finally{try{a||null==e.return||e.return()}finally{if(i)throw A}}return o}}(e,t)||function(r,e){if(r){if("string"==typeof r)return n(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?n(r,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=A[1],a=A[3];if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),l="/*# ".concat(c," */"),d=a.sources.map((function(r){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(r," */")}));return[o].concat(d).concat([l]).join("\n")}return[o].join("\n")}},300:(r,n)=>{var e=function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==e)return e;throw new Error("unable to locate global object")}();r.exports=n=e.fetch,e.fetch&&(n.default=e.fetch.bind(e)),n.Headers=e.Headers,n.Request=e.Request,n.Response=e.Response},379:(r,n,e)=>{var t,A=function(){var r={};return function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}r[n]=e}return r[n]}}(),o=[];function a(r){for(var n=-1,e=0;e<o.length;e++)if(o[e].identifier===r){n=e;break}return n}function i(r,n){for(var e={},t=[],A=0;A<r.length;A++){var i=r[A],c=n.base?i[0]+n.base:i[0],l=e[c]||0,d="".concat(c," ").concat(l);e[c]=l+1;var s=a(d),u={css:i[1],media:i[2],sourceMap:i[3]};-1!==s?(o[s].references++,o[s].updater(u)):o.push({identifier:d,updater:m(u,n),references:1}),t.push(d)}return t}function c(r){var n=document.createElement("style"),t=r.attributes||{};if(void 0===t.nonce){var o=e.nc;o&&(t.nonce=o)}if(Object.keys(t).forEach((function(r){n.setAttribute(r,t[r])})),"function"==typeof r.insert)r.insert(n);else{var a=A(r.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}return n}var l,d=(l=[],function(r,n){return l[r]=n,l.filter(Boolean).join("\n")});function s(r,n,e,t){var A=e?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(r.styleSheet)r.styleSheet.cssText=d(n,A);else{var o=document.createTextNode(A),a=r.childNodes;a[n]&&r.removeChild(a[n]),a.length?r.insertBefore(o,a[n]):r.appendChild(o)}}function u(r,n,e){var t=e.css,A=e.media,o=e.sourceMap;if(A?r.setAttribute("media",A):r.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleSheet)r.styleSheet.cssText=t;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(t))}}var f=null,h=0;function m(r,n){var e,t,A;if(n.singleton){var o=h++;e=f||(f=c(n)),t=s.bind(null,e,o,!1),A=s.bind(null,e,o,!0)}else e=c(n),t=u.bind(null,e,n),A=function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(e)};return t(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap)return;t(r=n)}else A()}}r.exports=function(r,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var e=i(r=r||[],n);return function(r){if(r=r||[],"[object Array]"===Object.prototype.toString.call(r)){for(var t=0;t<e.length;t++){var A=a(e[t]);o[A].references--}for(var c=i(r,n),l=0;l<e.length;l++){var d=a(e[l]);0===o[d].references&&(o[d].updater(),o.splice(d,1))}e=c}}}}},n={};function e(t){var A=n[t];if(void 0!==A)return A.exports;var o=n[t]={id:t,exports:{}};return r[t](o,o.exports,e),o.exports}e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r=e(379),n=e.n(r),t=e(426);n()(t.Z,{insert:"head",singleton:!1}),t.Z.locals;const A=e(300);(async function(){const r=await A("https://api.tvmaze.com/search/shows?q=comedy#");return await r.json()})().then((r=>{console.log(r)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
